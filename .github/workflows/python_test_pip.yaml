# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install openmpi-bin mpi-default-bin openmpi-doc libopenmpi-dev
        sudo apt-get install gdal-bin libgdal-dev libgeos-dev
        sudo apt-get install libhdf5-openmpi-dev libnetcdf-dev
        sudo apt-get install libstdc++6 libxml2-dev libxslt1-dev libsqlite3-dev
        cd ${RUNNER_TEMP}
        wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz
        wget -q http://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip
        tar -xzf proj-${PROJ_VERSION}.tar.gz
        unzip proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip -d proj-${PROJ_VERSION}/data/
        cd proj-${PROJ_VERSION}
        mkdir build
        cd build
        sudo cmake \
            -DPYTHON_EXECUTABLE=/usr/local/bin/python3 \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=true \
            -DCMAKE_INSTALL_PREFIX=/usr/local/ ..
        sudo cmake --build .
        sudo make --quiet --jobs=${JOBS}
        sudo make --quiet install
        make clean
        cd ${GITHUB_WORKSPACE}
        sudo ldconfig --verbose
        sudo projsync --system-directory --all
        pip install --upgrade pip
        pip install --upgrade setuptools==58.0
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        env MPICC=/usr/bin/mpicc
        export CC=mpicc
        export HDF5_MPI="ON"
        export HDF5_DIR=/usr/lib/x86_64-linux-gnu/hdf5/openmpi
        pip install git+https://github.com/SciTools/cartopy.git
        pip install .